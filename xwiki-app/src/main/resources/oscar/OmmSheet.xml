<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>oscar</web>
<name>OmmSheet</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent>oscar.Omm</parent>
<creator>xwiki:XWiki.sl</creator>
<author>xwiki:XWiki.sl</author>
<customClass></customClass>
<contentAuthor>xwiki:XWiki.sl</contentAuthor>
<creationDate>1446115421000</creationDate>
<date>1464013516000</date>
<contentUpdateDate>1464013516000</contentUpdateDate>
<version>6.37</version>
<title>#if($doc.fullName == "oscar.OMM") Open-source Maturity Model Form#else$xwiki.getDocument($doc.parent).displayTitle OMM#end</title>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>true</minorEdit>
<syntaxId>xwiki/2.1</syntaxId>
<hidden>false</hidden>
<content>{{velocity}}
#set($xobj = $doc.getObject('oscar.Omm'))
#set($class = $xobj.xWikiClass)
#foreach($prop in $class.properties)
#if($prop.name != "title")
#if($prop.name == "PDOC-1_1")
== Project Documentation ==
{{box}}Purpose: Develop and maintain project documentation, making it readily accessible to the community{{/box}}
=== Asset documentation

Documentation related to assets need to be provided and properly maintained. Access needs to be provided for the community and relevant
stakeholders.
#elseif($prop.name == "PDOC-2_1")
=== Documentation maintenance

Project documentation require continuous management to stay up-to-date.
#elseif($prop.name == "PDOC-3_1")
=== Documentation improvement

Quality and scope of the project and asset documentation should be continuously improved.
#elseif($prop.name == "STD-1_1")
== Use of Established and Widespread Standards ==
{{box}}Purpose: Promote the use and implementation of Open Standards for product and process{{/box}}
=== Use of open standards
#elseif($prop.name == "STD-2_1")
=== Strategic independence

To ensure the sustained viability of a project and to improve interoperability with other projects, measures should be taken to make assets and
processes independent of proprietary solutions.
#set($sum = 0)
#set($counter = 0)
#foreach($prop in $class.properties)
#if($prop.name.startsWith("STD"))
  #set($val = $mathtool.toInteger($xobj.get($prop.name)))
  #set($sum = $mathtool.add($sum, $val))
  #set($counter = $mathtool.add($counter, 1))
#end
#end
#elseif($prop.name == "QTP-1_1")
== Quality of the Testing Process ==
{{box}}Purpose: Provide and implement a high quality testing process{{/box}}
=== Quality of the test plan
#elseif($prop.name == "QTP-2_1")
=== Managed testing process
#elseif($prop.name == "QTP-3_1")
=== Testing process improvement

The following objectives aim on helping projects to continuously improve their test processes.
#elseif($prop.name == "LCS-1_1")
== Licenses, Copyright and IP Management ==
{{box}}Purpose: Ensure the project has appropriate intellectual property policy, selects appropriate licenses and copyrights and manage them satisfactorily
{{/box}}

{{box}}
The text in this section does not constitute legal advice. It is important to make clear what licenses we are talking about or more precisely what components need to be taken into account. It is not just the components "in the repository" (or "in the source folders or  archives"). One has to look at libraries, and the components the software will be linked to.
{{/box}}

=== Asset license management
#elseif($prop.name == "LCS-2_1")
=== Copyright management and management of intellectual property
#elseif($prop.name == "LCS-3_1")
=== Improved diffusion of FLOSS
#elseif($prop.name == "ENV-1_1")
== ENV: Environment ==
{{box}}Purpose: Provide development resources such as operating system, language compilers, development tools, communication tools, ideally all tools should be FLOSS-compliant and interoperable{{/box}}
=== Provisioning of development resources and infrastructure
#elseif($prop.name == "ENV-2_1")
=== Continuous maintenance of the project environment
#elseif($prop.name == "ENV-3_1")
=== Encouragement to use FLOSS tools
#elseif($prop.name == "DFCT-1_1")
== Maintenance of defects, commits, and other contributions ==
{{box}}Purpose: Specifically analyze the activity related to source code commits and bug reports provided to the project{{/box}}
=== Asset maintenance
#elseif($prop.name == "DFCT-2_1")
=== Environment for contribution of bug reports and commits
#elseif($prop.name == "DFCT-3_1")
=== Management of contributions, commits, and bug reports
#elseif($prop.name == "DFCT-4_1")
=== Encouragement of defect reporting
#elseif($prop.name == "MST-1_1")
== Maintenance of non-functional properties ==
{{box}}Purpose: Specify, develop and maintain non-functional requirements for the project (e.g. maintainability, stability){{/box}}
=== Asset quality plan reflects non-functional requirements
#elseif($prop.name == "MST-2_1")
=== Asset maintenance management
#elseif($prop.name == "CM-1_1")
== Configuration / Version Management ==
{{box}}Purpose: Establish and maintain the integrity of the product and its releases{{/box}}
=== Release management efficiency
#elseif($prop.name == "CM-2_1")
=== Tracking and control of changes
#elseif($prop.name == "CM-3_1")
=== Integrity of asset releases
#elseif($prop.name == "DEP-1_1")
== Cloud Deployment ==
{{box}}
Purpose: assess cloud deployment readiness throuh quality requirements that have to be met in order to ensure that a project delivers deployable assets (binaries, images, templates) within a cloud marketplace such as [[AppHub&gt;&gt;https://www.apphub.eu.com]].
{{/box}}
#elseif($prop.name == "PP-1_1")
== Project Planning ==
{{box}}Purpose: Estimate and plan project activities{{/box}}
=== Estimates
#elseif($prop.name == "PP-2_1")
=== Project plan
#elseif($prop.name == "REQM-1")
== Requirements Management ==
{{box}}Purpose: Establish and maintain Requirements{{/box}}
#elseif($prop.name == "RDMP-1")
== Roadmap ==
{{box}}Purpose: Create and maintain product roadmap{{/box}}
#elseif($prop.name == "STK-1_1")
== Stakeholders ==
{{box}}Purpose: Plan and manage stakeholder involvement{{/box}}
=== Stakeholders management planning
#elseif($prop.name == "STK-2_1")
=== Stakeholders involvement management
#elseif($prop.name == "STK-3_1")
=== Stakeholders involvement improvement
#end
#set($propName = $prop.name)
#set($propName = $propName.replace("_","."))
|(% style="width:10%" %)$propName|(% style="width:65%" %)$prop.prettyName|(% style="width:5%; text-align: right;" %){{html}}&lt;span class="glyphicon glyphicon-info-sign" id="${prop.name}-info" data-container="body" data-toggle="popover" data-placement="left"&gt;&lt;/span&gt;{{/html}}|(% style="width:20%; text-align: right; white-space: nowrap;" %)$doc.display($prop.getName()) % implemented
#end
#end
{{/velocity}}

{{velocity}}
{{html}}
&lt;script type="text/javascript"&gt;
require(['jquery', 'bootstrap'], function($) {
  #foreach($prop in $class.properties)
    #set($idx = "${prop.name}-info")
    #set($prompt = $prop.validationMessage)
    #if($prompt.trim() != "")
      #set($items = $prompt.split("\|"))
      #set($output = "")
      #if($items.size() &gt; 1)
        #set($first = $items.get(0))
        #set($idx1 = $first.indexOf(":"))
        #if($idx1 &gt; 0)
          #set($output = "&lt;p&gt;$first&lt;/p&gt;")
          #set($items[0] = "")
        #end
        #set($output = "$output&lt;ul&gt;")
        #foreach($item in $items)
          #if($item != "")
            #set($output = "$output&lt;li&gt;$item&lt;/li&gt;")
          #end
        #end
        #set($output = "$output&lt;/ul&gt;")
      #else
        #set($output = $items.get(0))        
      #end
      $('#$idx').popover({trigger: 'hover click', content: "$output", html: true});
    #else
      $('#$idx').css("display", "none")
    #end
  #end
  $('[data-toggle="popover"]').popover()
});
&lt;/script&gt;
{{/html}}
{{/velocity}}</content></xwikidoc>
